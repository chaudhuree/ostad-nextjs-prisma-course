* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
ul {
  list-style: none;
}
body {
  width: 100%;
  height: 100vh;
  display: grid;
  place-items: center;
}
.todo__heading {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1rem;
  text-align: center;
}
.todo__container {
  padding: 30px 20px;
  background: #dce1f3;
  width: 360px;
  min-height: 300px;
}
.input__container {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
ul.todo__items {
  margin-top: 30px;
  text-align: center;
  padding: 10px 8px;
}
li.todo__item {
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
}
label.todo__item-label {
  display: flex;
  justify-content: space-between;
  gap: 8px;
}
/* input */
.form {
  --width-of-input: 100%;
  --border-height: 1px;
  --border-before-color: rgba(221, 221, 221, 0.39);
  --border-after-color: #5891ff;
  --input-hovered-color: #4985e01f;
  position: relative;
  width: var(--width-of-input);
 }
 /* styling of Input */
 .input {
  color: #565555;
  font-size: 0.9rem;
  background-color: transparent;
  width: 100%;
  box-sizing: border-box;
  padding-inline: 0.5em;
  padding-block: 0.7em;
  border: none;
  border-bottom: var(--border-height) solid var(--border-before-color);
 }
 /* styling of animated border */
 .input-border {
  position: absolute;
  background: var(--border-after-color);
  width: 0%;
  height: 2px;
  bottom: 0;
  left: 0;
  transition: 0.3s;
 }
 /* Hover on Input */
 input:hover {
  background: var(--input-hovered-color);
 }
 
 input:focus {
  outline: none;
 }
 /* here is code of animated border */
 input:focus ~ .input-border {
  width: 100%;
 }
 /* === if you want to do animated border on typing === */
 /* remove input:focus code and uncomment below code */
 /* input:valid ~ .input-border{
   width: 100%;
 } */
/* button */
.button {
  width: 120px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 12px;
  cursor: pointer;
  border: 3px solid #018787cf;
  background-color: #018787b3;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.137);
  align-self: center;
}

.text {
  width: 70%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgb(27, 27, 27);
  color: white;
}

.arrow path {
  fill: #ffffff;
}

.button:hover .arrow {
  animation: slide-in-left 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

@keyframes slide-in-left {
  0% {
    transform: translateX(-8px);
    opacity: 0;
  }

  100% {
    transform: translateX(0px);
    opacity: 1;
  }
}

.button:active {
  transform: scale(0.97);
}
/* checkbox css */
.cl-checkbox {
  position: relative;
  display: inline-block;
 }
 
 /* Input */
 .cl-checkbox > input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  z-index: -1;
  position: absolute;
  left: -10px;
  top: -8px;
  display: block;
  margin: 0;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  background-color: rgba(0, 0, 0, 0.6);
  box-shadow: none;
  outline: none;
  opacity: 0;
  transform: scale(1);
  pointer-events: none;
  transition: opacity 0.3s, transform 0.2s;
 }
 
 /* Span */
 .cl-checkbox > span {
  display: inline-block;
  width: 100%;
  cursor: pointer;
 }
 
 /* Box */
 .cl-checkbox > span::before {
  content: "";
  display: inline-block;
  box-sizing: border-box;
  margin: 3px 11px 3px 1px;
  border: solid 2px;
  /* Safari */
  border-color: rgba(0, 0, 0, 0.6);
  border-radius: 2px;
  width: 18px;
  height: 18px;
  vertical-align: top;
  transition: border-color 0.2s, background-color 0.2s;
 }
 
 /* Checkmark */
 .cl-checkbox > span::after {
  content: "";
  display: block;
  position: absolute;
  top: 3px;
  left: 1px;
  width: 10px;
  height: 5px;
  border: solid 2px transparent;
  border-right: none;
  border-top: none;
  transform: translate(3px, 4px) rotate(-45deg);
 }
 
 /* Checked, Indeterminate */
 .cl-checkbox > input:checked,
 .cl-checkbox > input:indeterminate {
  background-color: #018786;
 }
 
 .cl-checkbox > input:checked + span::before,
 .cl-checkbox > input:indeterminate + span::before {
  border-color: #018786;
  background-color: #018786;
 }
 
 .cl-checkbox > input:checked + span::after,
 .cl-checkbox > input:indeterminate + span::after {
  border-color: #fff;
 }
 
 .cl-checkbox > input:indeterminate + span::after {
  border-left: none;
  transform: translate(4px, 3px);
 }
 
 /* Hover, Focus */
 .cl-checkbox:hover > input {
  opacity: 0.04;
 }
 
 .cl-checkbox > input:focus {
  opacity: 0.12;
 }
 
 .cl-checkbox:hover > input:focus {
  opacity: 0.16;
 }
 
 /* Active */
 .cl-checkbox > input:active {
  opacity: 1;
  transform: scale(0);
  transition: transform 0s, opacity 0s;
 }
 
 .cl-checkbox > input:active + span::before {
  border-color: #85b8b7;
 }
 
 .cl-checkbox > input:checked:active + span::before {
  border-color: transparent;
  background-color: rgba(0, 0, 0, 0.6);
 }
 
 /* Disabled */
 .cl-checkbox > input:disabled {
  opacity: 0;
 }
 
 .cl-checkbox > input:disabled + span {
  color: rgba(0, 0, 0, 0.38);
  cursor: initial;
 }
 
 .cl-checkbox > input:disabled + span::before {
  border-color: currentColor;
 }
 
 .cl-checkbox > input:checked:disabled + span::before,
 .cl-checkbox > input:indeterminate:disabled + span::before {
  border-color: transparent;
  background-color: currentColor;
 }
 
 /* todo description */
 .todo__text {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #4d4242f7;
}
/* delete button */
.btn {
  background-color: transparent;
  position: relative;
  border: none;
}

.btn::after {
  content: 'delete';
  position: absolute;
  top: -130%;
  left: 50%;
  transform: translateX(-50%);
  width: fit-content;
  height: fit-content;
  background-color: rgb(168, 7, 7);
  padding: 4px 8px;
  border-radius: 5px;
  transition: .2s linear;
  transition-delay: .2s;
  color: white;
  text-transform: lowercase;
  font-size: 12px;
  opacity: 0;
  visibility: hidden;
}

.icon {
  transform: scale(1.2);
  transition: .2s linear;
}

.btn:hover > .icon {
  transform: scale(1.5);
}

.btn:hover > .icon path {
  fill: rgb(168, 7, 7);
}

.btn:hover::after {
  visibility: visible;
  opacity: 1;
  top: -160%;
}
